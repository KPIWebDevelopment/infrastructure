version: '3.8'

services:
  post-service:
    image: post-service:latest
    pull_policy: build
    container_name: post-service
    restart: unless-stopped
    build:
      context: ../post-service
    ports:
      - '8081:8080'
    depends_on:
      - post-service-db
    networks:
      - internal
    environment:
      AMQP_HOST: rabbitmq
      AMQP_PORT: 5672
      AMQP_USERNAME: user
      AMQP_PASSWORD: password
      POSTGRES_HOST: post-service-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: post_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      JWT_SECRET: kpisupersecret228123123123123123123123123
      JWT_EXPIRATION: 3600000

  user-service:
    image: user-service:latest
    pull_policy: build
    container_name: user-service
    restart: unless-stopped
    build:
      context: ../user-service
    ports:
      - '8080:8080'
    depends_on:
      - user-service-db
    networks:
      - internal
    environment:
      POSTGRES_HOST: user-service-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: user_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      JWT_SECRET: kpisupersecret228123123123123123123123123
      JWT_EXPIRATION: 3600000

  image-processing-service:
    image: image-processing-service:latest
    container_name: image-processing-service
    pull_policy: build
    build:
      context: ../image-processing-service
    ports:
      - "8083:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      AMQP_HOST: rabbitmq
      AMQP_PORT: 5672
      AMQP_USERNAME: user
      AMQP_PASSWORD: password
      S3_BUCKET: ${S3_BUCKET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_REGION: ${S3_REGION}
    networks:
      - internal

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  post-service-db:
    image: postgres:15
    container_name: post-service-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - post_service_data:/var/lib/postgresql/data
    networks:
      - internal
    environment:
      POSTGRES_DB: post_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin

  user-service-db:
    image: postgres:15
    container_name: user-service-db
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - user_service_data:/var/lib/postgresql/data
    networks:
        - internal
    restart: unless-stopped

volumes:
  rabbitmq_data:
  post_service_data:
  user_service_data:

networks:
  internal:
    driver: bridge
